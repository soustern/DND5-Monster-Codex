.c-sheet {
  content-visibility: hidden;
  opacity: 0;
  transition: all 1.5s;

  max-width: 150rem;
  // height: 100%;

  margin: 0 auto 0 auto;

  // Use grid in this component
  display: grid;
  gap: 5rem;
  // // Specify amount of columns
  // grid-template-columns: calc(100% / 3) calc(100% / 3) calc(100% / 3);
  // grid-template-columns: 1fr 1fr 1fr;
  grid-template-columns: repeat(3, 1fr);

  &__img {
    @extend %default-grid-style;
    // Set amount of occupied rows

    overflow: hidden;

    grid-row: span 3;

    background-size: cover;
    background-position: right;

    // Remove image bellow border (This is a problem because the border has a opacity value)
    // // Making it so we can see trough with the image appearing behind
    // // // This makes the image appear where the padding ends, removing it from behind the border
    background-clip: padding-box;

    padding: 1px;

    // Apply shadow
    &::after {
      content: "";
      display: block;
      height: 100%;
      width: 100%;

      transform: scale(1.3);

      background-image: radial-gradient(transparent, $color-black 80%);
    }

    // Apply responsiveness
    @media (max-width: 1530px) {
      grid-row: span 1;
      grid-column: span 3;
      height: 30vh;
    }
  }

  &__info {
    &--general {
      &-1 {
        @extend %default-grid-style;

        // Style line
        & hr {
          border: none;
          height: 0.1rem;
          background-color: rgba($color-white, 0.2);
        }

        // Select every children but the last
        & > *:not(:last-child) {
          margin-bottom: 5rem;
        }

        // Select every children but the last
        & > * > * {
          margin-left: 1rem;
          color: $color-primary-light;
        }

        // Apply responsiveness
        @media (max-width: 1530px) {
          grid-row: span 1;
          grid-column: span 3;
        }
      }
      &-2 {
        @extend %default-grid-style;

        // Select every children but the last
        & > *:not(:last-child) {
          margin-bottom: 5rem;
        }

        // Apply responsiveness
        @media (max-width: 1530px) {
          grid-row: span 1;
          grid-column: span 3;
        }
      }
    }
    &--skills {
      &-1 {
        @extend %default-grid-style;

        // Select every children but the last
        & > *:not(:last-child) {
          margin-bottom: 5rem;
        }

        // Apply responsiveness
        @media (max-width: 1530px) {
          grid-row: span 1;
          grid-column: span 3;
        }
      }
      &-2 {
        @extend %default-grid-style;

        // Select every children but the last
        & > *:not(:last-child) {
          margin-bottom: 5rem;
        }

        // Apply responsiveness
        @media (max-width: 1530px) {
          grid-row: span 1;
          grid-column: span 3;
        }
      }
    }
    &--languages {
      @extend %default-grid-style;
      // Set amount of occupied columns
      grid-column: span 2;

      // Apply responsiveness
      @media (max-width: 1530px) {
        grid-row: span 1;
        grid-column: span 3;
      }
    }
  }
}
